#pragma checksum "C:\Users\media\source\repos\TsinghuaNet\TsinghuaNetUAP\TsinghuaNet\MainPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "27AFDDEF64DB371756F971A01D6AD3A3CDAEC154898A1B7813ECEDE9F85D6F41"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TsinghuaNet
{
    partial class MainPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ToolTipService_ToolTip(global::Windows.UI.Xaml.DependencyObject obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                global::Windows.UI.Xaml.Controls.ToolTipService.SetToolTip(obj, value);
            }
            public static void Set_Windows_UI_Xaml_Automation_AutomationProperties_Name(global::Windows.UI.Xaml.DependencyObject obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                global::Windows.UI.Xaml.Automation.AutomationProperties.SetName(obj, value);
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ContentControl_Content(global::Windows.UI.Xaml.Controls.ContentControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Content = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainPage_obj4_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::Web.WebDevice dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj4;
            private global::Windows.UI.Xaml.Controls.ToolTip obj5;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;
            private global::Windows.UI.Xaml.Controls.TextBlock obj9;
            private global::Windows.UI.Xaml.Controls.TextBlock obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4NameDisabled = false;
            private static bool isobj5ContentDisabled = false;
            private static bool isobj6IsEnabledDisabled = false;
            private static bool isobj8TextDisabled = false;
            private static bool isobj9TextDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj11TextDisabled = false;

            private MainPage_obj4_BindingsTracking bindingsTracking;

            public MainPage_obj4_Bindings()
            {
                this.bindingsTracking = new MainPage_obj4_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 16 && columnNumber == 13)
                {
                    isobj4NameDisabled = true;
                }
                else if (lineNumber == 28 && columnNumber == 20)
                {
                    isobj5ContentDisabled = true;
                }
                else if (lineNumber == 34 && columnNumber == 29)
                {
                    isobj6IsEnabledDisabled = true;
                }
                else if (lineNumber == 49 && columnNumber == 20)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 52 && columnNumber == 20)
                {
                    isobj9TextDisabled = true;
                }
                else if (lineNumber == 56 && columnNumber == 20)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 60 && columnNumber == 20)
                {
                    isobj11TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 4: // MainPage.xaml line 15
                        this.obj4 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 5: // MainPage.xaml line 28
                        this.obj5 = (global::Windows.UI.Xaml.Controls.ToolTip)target;
                        break;
                    case 6: // MainPage.xaml line 32
                        this.obj6 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        break;
                    case 8: // MainPage.xaml line 49
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9: // MainPage.xaml line 51
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 10: // MainPage.xaml line 55
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 11: // MainPage.xaml line 59
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj4.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Web.WebDevice) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Web.WebDevice)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Web.WebDevice obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Mac(obj.Mac, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_CanRename(obj.CanRename, phase);
                        this.Update_WebTraffic(obj.WebTraffic, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_IPAddress(obj.IPAddress, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_LogOnDateTime(obj.LogOnDateTime, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 15
                    if (!isobj4NameDisabled)
                    {
                        if ((this.obj4.Target as global::Windows.UI.Xaml.Controls.Grid) != null)
                        {
                            XamlBindingSetters.Set_Windows_UI_Xaml_Automation_AutomationProperties_Name((this.obj4.Target as global::Windows.UI.Xaml.Controls.Grid), obj, null);
                        }
                    }
                    // MainPage.xaml line 49
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                    }
                }
            }
            private void Update_Mac(global::Web.MacAddress obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 28
                    if (!isobj5ContentDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ContentControl_Content(this.obj5, obj, null);
                    }
                }
            }
            private void Update_CanRename(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 32
                    if (!isobj6IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj6, obj);
                    }
                }
            }
            private void Update_WebTraffic(global::Web.Size obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 51
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj.ToString(), null);
                    }
                }
            }
            private void Update_IPAddress(global::Web.Ipv4Address obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 55
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj10, obj.ToString(), null);
                    }
                }
            }
            private void Update_LogOnDateTime(global::System.DateTime obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 59
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj.ToString(), null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class MainPage_obj4_BindingsTracking
            {
                private global::System.WeakReference<MainPage_obj4_Bindings> weakRefToBindingObj; 

                public MainPage_obj4_BindingsTracking(MainPage_obj4_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<MainPage_obj4_Bindings>(obj);
                }

                public MainPage_obj4_Bindings TryGetBindingObject()
                {
                    MainPage_obj4_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainPage_obj4_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Web.WebDevice obj = sender as global::Web.WebDevice;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_CanRename(obj.CanRename, DATA_CHANGED);
                                bindings.Update_WebTraffic(obj.WebTraffic, DATA_CHANGED);
                                bindings.Update_LogOnDateTime(obj.LogOnDateTime, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CanRename":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_CanRename(obj.CanRename, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "WebTraffic":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_WebTraffic(obj.WebTraffic, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LogOnDateTime":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_LogOnDateTime(obj.LogOnDateTime, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Web.WebDevice obj)
                {
                    MainPage_obj4_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::TsinghuaNet.MainPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.AppBarButton obj20;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj21;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj22;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj23;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj20ToolTipDisabled = false;
            private static bool isobj21ToolTipDisabled = false;
            private static bool isobj22ToolTipDisabled = false;
            private static bool isobj23ToolTipDisabled = false;

            public MainPage_obj1_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 134 && columnNumber == 21)
                {
                    isobj20ToolTipDisabled = true;
                }
                else if (lineNumber == 140 && columnNumber == 21)
                {
                    isobj21ToolTipDisabled = true;
                }
                else if (lineNumber == 145 && columnNumber == 21)
                {
                    isobj22ToolTipDisabled = true;
                }
                else if (lineNumber == 152 && columnNumber == 21)
                {
                    isobj23ToolTipDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 20: // MainPage.xaml line 130
                        this.obj20 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 21: // MainPage.xaml line 136
                        this.obj21 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 22: // MainPage.xaml line 142
                        this.obj22 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 23: // MainPage.xaml line 148
                        this.obj23 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::TsinghuaNet.MainPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::TsinghuaNet.MainPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_appBarButtonSites(obj.appBarButtonSites, phase);
                        this.Update_appBarButtonLogOn(obj.appBarButtonLogOn, phase);
                        this.Update_appBarButtonLogOnOther(obj.appBarButtonLogOnOther, phase);
                        this.Update_appBarButtonRefresh(obj.appBarButtonRefresh, phase);
                    }
                }
            }
            private void Update_appBarButtonSites(global::Windows.UI.Xaml.Controls.AppBarButton obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_appBarButtonSites_Label(obj.Label, phase);
                    }
                }
            }
            private void Update_appBarButtonSites_Label(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 130
                    if (!isobj20ToolTipDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToolTipService_ToolTip(this.obj20, obj, null);
                    }
                }
            }
            private void Update_appBarButtonLogOn(global::Windows.UI.Xaml.Controls.AppBarButton obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_appBarButtonLogOn_Label(obj.Label, phase);
                    }
                }
            }
            private void Update_appBarButtonLogOn_Label(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 136
                    if (!isobj21ToolTipDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToolTipService_ToolTip(this.obj21, obj, null);
                    }
                }
            }
            private void Update_appBarButtonLogOnOther(global::Windows.UI.Xaml.Controls.AppBarButton obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_appBarButtonLogOnOther_Label(obj.Label, phase);
                    }
                }
            }
            private void Update_appBarButtonLogOnOther_Label(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 142
                    if (!isobj22ToolTipDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToolTipService_ToolTip(this.obj22, obj, null);
                    }
                }
            }
            private void Update_appBarButtonRefresh(global::Windows.UI.Xaml.Controls.AppBarButton obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_appBarButtonRefresh_Label(obj.Label, phase);
                    }
                }
            }
            private void Update_appBarButtonRefresh_Label(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 148
                    if (!isobj23ToolTipDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToolTipService_ToolTip(this.obj23, obj, null);
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // MainPage.xaml line 65
                {
                    this.showHint = (global::Windows.UI.Xaml.Media.Animation.Storyboard)(target);
                    ((global::Windows.UI.Xaml.Media.Animation.Storyboard)this.showHint).Completed += this.showHint_Completed;
                }
                break;
            case 6: // MainPage.xaml line 32
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element6 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element6).Click += this.Rename_Click;
                }
                break;
            case 7: // MainPage.xaml line 35
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element7 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element7).Click += this.Drop_Click;
                }
                break;
            case 12: // MainPage.xaml line 89
                {
                    this.commandBar = (global::Windows.UI.Xaml.Controls.CommandBar)(target);
                }
                break;
            case 13: // MainPage.xaml line 91
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element13 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element13).Click += this.appBarButtonSettings_Click;
                }
                break;
            case 14: // MainPage.xaml line 94
                {
                    this.appBarButtonAbout = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                }
                break;
            case 15: // MainPage.xaml line 125
                {
                    this.appBarButtonChangeUser = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.appBarButtonChangeUser).Click += this.changeUser_Click;
                }
                break;
            case 16: // MainPage.xaml line 98
                {
                    global::Windows.UI.Xaml.Controls.Flyout element16 = (global::Windows.UI.Xaml.Controls.Flyout)(target);
                    ((global::Windows.UI.Xaml.Controls.Flyout)element16).Opening += this.Flyout_Opening;
                }
                break;
            case 17: // MainPage.xaml line 99
                {
                    this.textBlockAbout = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 18: // MainPage.xaml line 112
                {
                    this.runVersion = (global::Windows.UI.Xaml.Documents.Run)(target);
                }
                break;
            case 19: // MainPage.xaml line 116
                {
                    global::Windows.UI.Xaml.Documents.Hyperlink element19 = (global::Windows.UI.Xaml.Documents.Hyperlink)(target);
                    ((global::Windows.UI.Xaml.Documents.Hyperlink)element19).Click += this.ReviewLink_Click;
                }
                break;
            case 20: // MainPage.xaml line 130
                {
                    this.appBarButtonSites = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.appBarButtonSites).Click += this.appBarButtonSites_Click;
                }
                break;
            case 21: // MainPage.xaml line 136
                {
                    this.appBarButtonLogOn = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.appBarButtonLogOn).Click += this.appBarButtonLogOn_Click;
                }
                break;
            case 22: // MainPage.xaml line 142
                {
                    this.appBarButtonLogOnOther = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.appBarButtonLogOnOther).Click += this.appBarButtonLogOnOther_Click;
                }
                break;
            case 23: // MainPage.xaml line 148
                {
                    this.appBarButtonRefresh = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)this.appBarButtonRefresh).Click += this.refresh_Click;
                }
                break;
            case 24: // MainPage.xaml line 323
                {
                    this.borderHint = (global::Windows.UI.Xaml.Controls.Border)(target);
                }
                break;
            case 25: // MainPage.xaml line 329
                {
                    this.textBlockHint = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 26: // MainPage.xaml line 174
                {
                    this.gridRoot = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 27: // MainPage.xaml line 273
                {
                    this.listViewOnlineDevices = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    ((global::Windows.UI.Xaml.Controls.ListView)this.listViewOnlineDevices).ItemClick += this.listViewOnlineDevices_ItemClick;
                }
                break;
            case 30: // MainPage.xaml line 312
                {
                    this.textBlockNoDevices = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 31: // MainPage.xaml line 223
                {
                    this.progressBarUsage = (global::Windows.UI.Xaml.Controls.ProgressBar)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// UnloadObject(DependencyObject)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        partial void UnloadObject(global::Windows.UI.Xaml.DependencyObject unloadableObject)
        {
            if (unloadableObject != null)
            {
                // MainPage.xaml line 99
                if (unloadableObject == this.textBlockAbout)
                { 
                    this.DisconnectUnloadedObject(17);
                }
                // MainPage.xaml line 323
                if (unloadableObject == this.borderHint)
                { 
                    this.DisconnectUnloadedObject(24);
                }
                global::Windows.UI.Xaml.Markup.XamlMarkupHelper.UnloadObject(unloadableObject);
            }
        }

        /// <summary>
        /// DisconnectUnloadedObject(int connectionId)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void DisconnectUnloadedObject(int connectionId)
        {
            switch(connectionId)
            {
                case 17: // MainPage.xaml line 99
                {
                    this.DisconnectUnloadedObject(18);
                    this.textBlockAbout = null;
                    break;
                }
                case 18: // MainPage.xaml line 112
                {
                    this.runVersion = null;
                    break;
                }
                case 19: // MainPage.xaml line 116
                {
                    break;
                }
                case 24: // MainPage.xaml line 323
                {
                    this.DisconnectUnloadedObject(25);
                    this.borderHint = null;
                    break;
                }
                case 25: // MainPage.xaml line 329
                {
                    this.textBlockHint = null;
                    break;
                }
                default:
                {
                    throw new global::System.ArgumentException("Invalid connectionId.");
                }
            }
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // MainPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    MainPage_obj1_Bindings bindings = new MainPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 4: // MainPage.xaml line 15
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element4 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    MainPage_obj4_Bindings bindings = new MainPage_obj4_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element4.DataContext);
                    element4.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element4, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element4, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

